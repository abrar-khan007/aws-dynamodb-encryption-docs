<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "file://zonbook/docbookx.dtd"
[
  <!ENTITY % phrases-ddb-encrypt SYSTEM "shared/phrases-ddb-encrypt.ent">
  %phrases-ddb-encrypt;
  <!ENTITY % phrases-kms SYSTEM "shared/phrases-kms.ent">
  %phrases-kms;
  <!ENTITY % xinclude SYSTEM "file://AWSShared/common/xinclude.mod">
  %xinclude;
  <!ENTITY % phrases-shared SYSTEM "file://AWSShared/common/phrases-shared.ent">
  %phrases-shared;
 ]>
<section id="concepts" role="topic">
  <info>
    <title id="concepts.title">&DDBEClong; concepts</title>
    <titleabbrev>Concepts</titleabbrev>
    <abstract>
      <para>Understand the concepts used in the &DDBEClong;.</para>
    </abstract>
  </info>
  <para>This topic explains the concepts and terminology used in the &DDBEClong;. </para>
  <para>To learn how the components of the &DDBEC; interact, see <xref linkend="how-it-works"
    endterm="how-it-works.title"/>.</para>
  
  <para role="topiclist"><!-- TOPICLIST --></para>
  <section id="concept-material-provider">
    <info>
      <title id="concept-material-provider.title">Cryptographic materials provider (CMP)</title>
    </info>
    <para>When implementing the &DDBEC;, one of your first tasks is to <link
      linkend="crypto-materials-providers">select a cryptographic materials provider</link> (CMP)
      (also known as an <emphasis>encryption materials provider</emphasis>). Your choice determines
      much of the rest of the implementation. </para>
    <para>A <emphasis>cryptographic materials provider</emphasis> (CMP) collects, assembles, and
      returns the cryptographic materials that the <link linkend="item-encryptor">item
      encryptor</link> uses to encrypt and sign your table items. The CMP determines the encryption
      algorithms to use and how to generate and protect encryption and signing keys.</para>
    <para>The CMP interacts with the item encryptor. The item encryptor requests encryption or
      decryption materials from the CMP, and the CMP returns them to the item encryptor. Then, the
      item encryptor uses the cryptographic materials to encrypt and sign, or verify and decrypt,
      the item.</para>
    <para>You specify the CMP when you configure the client. You can create a compatible custom CMP,
      or use one of the many CMPs in the library. Most CMPs are available for multiple programming
      languages. </para>
  </section>
  <section id="item-encryptor">
    <info>
      <title id="item-encryptor.title">Item encryptors</title>
    </info>
    <para>The <emphasis role="italic">item encryptor</emphasis> is a lower-level component that
      performs cryptographic operations for the &DDBEC;. It requests cryptographic materials from a
      <link linkend="concept-material-provider">cryptographic materials provider</link> (CMP), then
      uses the materials that the CMP returns to encrypt and sign, or verify and decrypt, your table
      item.</para>
    <para>You can interact with the item encryptor directly or use the helpers that your library
      provides. For example, the &DDBEC; for Java includes an <code>AttributeEncryptor</code> helper
      class that you can use with the <code>DynamoDBMapper</code>, instead of interacting directly
      with the <code>DynamoDBEncryptor</code> item encryptor. The Python library includes
      <code>EncryptedTable</code>, <code>EncryptedClient</code>, and <code>EncryptedResource</code>
      helper classes that interact with the item encryptor for you.</para>
  </section>
  <section id="attribute-actions">
    <info>
      <title id="attribute-actions.title">Attribute actions</title>
    </info>
    <para><emphasis role="italic">Attribute actions</emphasis> tell the item encryptor which actions
      to perform on each attribute of the item. </para>
    <para>The attribute action values can be one of the following:</para>
    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">Encrypt and sign</emphasis> &endash; Encrypt the attribute
          value. Include the attribute (name and value) in the item signature.</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">Sign only</emphasis> &endash; Include the attribute in the item
          signature.</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">Do nothing</emphasis> &endash; Do not encrypt or sign the
          attribute.</para>
      </listitem>
    </itemizedlist>
    <para>For any attribute that can store sensitive data, use <emphasis role="bold">Encrypt and
        sign</emphasis>. For primary key attributes (partition key and sort key), use <emphasis
        role="bold">Sign only</emphasis>. The <link linkend="material-description">material
        description attribute</link> and the signature attribute are not signed or encrypted. You
      don't need to specify attribute actions for these attributes.</para>
    <para>Choose your attribute actions carefully. When in doubt, use <emphasis role="bold">Encrypt
        and sign</emphasis>. Once you have used the &DDBEC; to protect your table items, you cannot
      change the action for an attribute without risking a signature validation error. For details,
      see <xref linkend="data-model" endterm="data-model.title"/>.</para>
    &primary-key-warning;
    <para>If the <link linkend="encryption-context">&DDB; encryption context</link> identifies your
      primary key attributes, the client will throw an error if you try to encrypt them.</para>
    <para>The technique that you use to specify the attribute actions is different for each
      programming language. It might also be specific to helper classes that you use.</para>
    <para>For details, see the documentation for your programming language.</para>
    <itemizedlist>
      <listitem>
        <para><link linkend="python-attribute-actions">Python</link></para>
      </listitem>
      <listitem>
        <para><link linkend="attribute-actions-java">Java</link></para>
      </listitem>
    </itemizedlist>
  </section>
  <section id="material-description">
    <info>
      <title id="material-description.title">Material description</title>
    </info>
    <para>The <emphasis role="italic">material description</emphasis> for an encrypted table item
      consists of information, such as encryption algorithms, about how the table item is encrypted
      and signed. The <link linkend="concept-material-provider">cryptographic materials
      provider</link> (CMP) records the material description as it assembles the cryptographic
      materials for encryption and signing. Later, when it needs to assemble cryptographic materials
      to verify and decrypt the item, it uses the material description as its guide. </para>
    <para>In the &DDBEC;, the material description refers to three related elements:</para>
    <variablelist role="termdef">
      <varlistentry>
        <term>Requested material description</term>
        <listitem>
          <para>Some <link linkend="concept-material-provider">cryptographic materials
            providers</link> (CMPs) let you specify advanced options, such as an encryption
            algorithm. To indicate your choices, you add name-value pairs to the material
            description property of the <link linkend="encryption-context">&DDB; encryption
            context</link> in your request to encrypt a table item. This element is known as the
            <emphasis role="italic">requested material description</emphasis>. The valid values in
            the requested material description are defined by the CMP that you choose. </para>
          <note>
            <para>Because the material description can override secure default values, we recommend
              that you omit the requested material description unless you have a compelling reason
              to use it.</para>
          </note>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Actual material description</term>
        <listitem>
          <para>The material description that the <link linkend="concept-material-provider"
            >cryptographic materials providers</link> (CMPs) return is known as the <emphasis
            role="italic">actual material description</emphasis>. It describes the actual values
            that the CMP used when it assembled the cryptographic materials. It usually consists of
            the requested material description, if any, with additions and changes.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Material description attribute</term>
        <listitem>
          <para>The client saves the actual material description in the <emphasis role="italic"
            >material description attribute</emphasis> of the encrypted item. The material
            description attribute name is <code>amzn-ddb-map-desc</code> and its value is the actual
            material description. The client uses the values in the material description attribute
            to verify and decrypt the item.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
  <section id="encryption-context">
    <info>
      <title id="encryption-context.title">&DDB; encryption context</title>
    </info>
    <para>The <emphasis>&DDB; encryption context</emphasis> supplies information about the table and
      item to the <link linkend="concept-material-provider">cryptographic materials provider</link>
      (CMP). In advanced implementations, the &DDB; encryption context can include a <link
      linkend="material-description">requested material description</link>.</para>
    <para>When you encrypt table items, the &DDB; encryption context is cryptographically bound to
      the encrypted attribute values. When you decrypt, if the &DDB; encryption context is not an
      exact, case-sensitive match for the &DDB; encryption context that was used to encrypt, the
      decrypt operation fails. If you interact with the <link linkend="item-encryptor">item
      encryptor</link> directly, you must provide a &DDB; encryption context when you call an
      encrypt or decrypt method. Most helpers create the &DDB; encryption context for you.</para>
    &encryption-context-note;
    <para>The &DDB; encryption context can include the following fields. All fields and values are
      optional.</para>
    <itemizedlist>
      <listitem>
        <para>Table name</para>
      </listitem>
      <listitem>
        <para>Partition key name</para>
      </listitem>
      <listitem>
        <para>Sort key name</para>
      </listitem>
      <listitem>
        <para>Attribute name-value pairs</para>
      </listitem>
      <listitem>
        <para><link linkend="material-description">Requested material description</link></para>
      </listitem>
    </itemizedlist>
    
  </section>
  <section id="provider-store">
    <info>
      <title id="provider-store.title">Provider store</title>
    </info>
    <para>A <emphasis role="italic">provider store</emphasis> is a component that returns <link
      linkend="concept-material-provider">cryptographic materials providers</link> (CMPs). The
      provider store can create the CMPs or get them from another source, such as another provider
      store. The provider store saves versions of the CMPs that it creates in persistent storage in
      which each stored CMP is identified by the material name of the requester and version number. </para>
    <para>The <link linkend="most-recent-provider">&MRP;</link> in the &DDBEC; gets
      its CMPs from a provider store, but you can use the provider store to supply CMPs to any
      component. Each &MRP; is associated with one provider store, but a provider
      store can supply CMPs to many requesters across multiple hosts.</para>
    <para>The provider store creates new versions of CMPs on demand, and returns new and existing
      versions. It also returns the latest version number for a given material name. This lets the
      requester know when the provider store has a new version of its CMP that it can
      request.</para>
    <para>The &DDBEC; includes a<link linkend="about-metastore"> MetaStore</link>, which is a
      provider store that creates Wrapped CMPs with keys that are stored in DynamoDB and encrypted
      by using an internal &DDBEC;. </para>
    <para><emphasis role="bold">Learn more:</emphasis></para>
    <itemizedlist>
      <listitem>
        <para>Provider store: <ulink
          url="&url-ddbec-javadoc;com/amazonaws/services/dynamodbv2/datamodeling/encryption/providers/store/ProviderStore.html"
          >Java</ulink>, <ulink
          url="&url-ddbec-python;blob/master/src/dynamodb_encryption_sdk/material_providers/store/__init__.py"
          >Python</ulink></para>
      </listitem>
      <listitem>
        <para>MetaStore: <ulink
          url="&url-ddbec-javadoc;com/amazonaws/services/dynamodbv2/datamodeling/encryption/providers/store/MetaStore.html"
          >Java</ulink>, <ulink
            url="&url-ddbec-pythondoc;lib/materials_providers/metastore.html#module-dynamodb_encryption_sdk.material_providers.store.meta"
          >Python</ulink></para>
      </listitem>
    </itemizedlist>
  </section>
</section>
