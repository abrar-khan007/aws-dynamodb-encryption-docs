<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "file://zonbook/docbookx.dtd"
[
  <!ENTITY % phrases-ddb-encrypt SYSTEM "shared/phrases-ddb-encrypt.ent">
  %phrases-ddb-encrypt;
   <!ENTITY % phrases-kms SYSTEM "shared/phrases-kms.ent">
    %phrases-kms;  
  <!ENTITY % xinclude SYSTEM "file://AWSShared/common/xinclude.mod">
  %xinclude;
  <!ENTITY % phrases-shared SYSTEM "file://AWSShared/common/phrases-shared.ent">
  %phrases-shared;
 ]>
<chapter id="crypto-materials-providers">
  <info>
    <title id="crypto-materials-providers.title">How to choose a cryptographic materials provider</title>
    <abstract>
      <para>Learn about the Cryptographic Materials Providers in the &DDBEC; and how to select one
        for your &DDB; applications.</para>
    </abstract>
  </info>
  <para>One of the most important decisions you make when using the &DDBEC; is selecting a <link
    linkend="concept-material-provider">cryptographic materials provider</link> (CMP). The CMP
    assembles and returns cryptographic materials to the item encryptor. It also determines how
    encryption and signing keys are generated, whether new key materials are generated for each item
    or are reused, and the encryption and signing algorithms that are used. </para>
  <para>You can choose a CMP from the implementations provided in the &DDBEC; libraries or build a
    compatible custom CMP. Your CMP choice might also depend on the <link
    linkend="programming-languages">programming language</link> that you use.</para>
  <para>This topic describes the most common CMPs and offers some advice to help you choose the best
    one for your application.</para>
  <variablelist role="termdef">
    <varlistentry>
      <term>&direct-kms-long;</term>
      <listitem><para>The &direct-kms-long; protects your table items under an <ulink
          url="&url-kms-dev;">&KMSlong;</ulink> (&KMS;) <ulink
          url="&url-kms-dev;concepts.html#master_keys">&CMKlong;</ulink> (&CMK;) that never
          leaves &KMS; unencrypted. Your application doesn't have to generate or manage any
          cryptographic materials. Because it uses the &CMK; to generate unique encryption and signing
          keys for each item, this provider calls &KMS; every time it encrypts or decrypts an item. </para>
        <para>If you use &KMS; and one &KMS; call per transaction is practical for your application,
          this provider is a good choice.</para>
        <para>For details, see <xref linkend="direct-kms-provider" endterm="direct-kms-provider.title"
          />.</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>&wrapped-cmp-long; (Wrapped CMP)</term>
      <listitem>
        <para>The &wrapped-cmp-long; (Wrapped CMP) lets you generate and manage your
          wrapping and signing keys outside of the &DDBEC;. </para>
        <para>The Wrapped CMP generates a unique encryption key for each item. Then it uses wrapping
          (or unwrapping) and signing keys that you supply. As such, you determine how the wrapping
          and signing keys are generated and whether they are unique to each item or are reused. The
          Wrapped CMP is a secure alternative to the <link linkend="direct-kms-provider">Direct KMS
          Provider</link> for applications that don't use &KMS; and can safely manage cryptographic
          materials.</para>
        <para>For details, see <xref linkend="wrapped-provider"
          endterm="wrapped-provider.title"/>.</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>&MRP;</term>
      <listitem>
        <para>The <emphasis role="italic">&MRP;</emphasis> is a <link
          linkend="concept-material-provider">cryptographic materials provider</link> (CMP) that is
          designed to work with a <link linkend="provider-store">provider store</link>. It gets CMPs
          from the provider store, and gets the cryptographic materials that it returns from the
          CMPs. The &MRP; typically uses each CMP to satisfy multiple requests for
          cryptographic materials, but you can use the features of the provider store to control the
          extent to which materials are reused, determine how often its CMP is rotated, and even
          change the type of CMP that is used without changing the &MRP;.</para>
        <para>You can use the &MRP; with any compatible provider store. The &DDBEC;
          includes a MetaStore, which is a provider store that returns Wrapped CMPs.</para>
        <para>The &MRP; is a good choice for applications that need to minimize calls
          to their cryptographic source, and applications that can reuse some cryptographic
          materials without violating their security requirements. For example, it allows you to
          protect your cryptographic materials under an <ulink url="&url-kms-dev;">&KMSlong;</ulink>
          (&KMS;) <ulink url="&url-kms-dev;concepts.html#master_keys">&CMKlong;</ulink>
          without calling &KMS; every time you encrypt or decrypt an item.</para><para>For details, see <xref linkend="most-recent-provider" endterm="most-recent-provider.title"
          />.</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>&static-cmp-long;</term>
      <listitem><para>The &static-cmp-long; is designed for testing, proof-of-concept demonstrations, and
          legacy compatibility. It doesn't generate any unique cryptographic materials for each
          item. It returns the same encryption and signing keys that you supply, and those keys are
          used directly to encrypt, decrypt, and sign your table items. </para>
        <note>
          <para>The <ulink
            url="&url-ddbec-javadoc;com/amazonaws/services/dynamodbv2/datamodeling/encryption/providers/AsymmetricStaticProvider.html"
            >Asymmetric Static Provider</ulink> in the Java library is not a static provider. It
            just supplies alternate constructors for the <link linkend="wrapped-provider">Wrapped
            CMP</link>. It is safe for production use, but you should use the Wrapped CMP directly
            whenever possible.</para>
        </note></listitem>
    </varlistentry>
  </variablelist>
  <!-- <TOPICLIST> -->
  <para role="topiclist"/>
  <!-- </TOPICLIST> -->


  <xi:include href="provider-kms.xml"/>
  <xi:include href="provider-wrapped.xml"/>
  <xi:include href="provider-most-recent.xml"/>
  <xi:include href="provider-static.xml"/>
  
</chapter>
